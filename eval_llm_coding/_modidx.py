# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/eval_llm_coding',
                'doc_host': 'https://blackcherry88.github.io',
                'git_url': 'https://github.com/blackcherry88/eval_llm_coding',
                'lib_path': 'eval_llm_coding'},
  'syms': { 'eval_llm_coding.alg.em': { 'eval_llm_coding.alg.em.EMGMM': ('em_openai.html#emgmm', 'eval_llm_coding/alg/em.py'),
                                        'eval_llm_coding.alg.em.EMGMM.__init__': ( 'em_openai.html#emgmm.__init__',
                                                                                   'eval_llm_coding/alg/em.py'),
                                        'eval_llm_coding.alg.em.EMGMM._e_step': ( 'em_openai.html#emgmm._e_step',
                                                                                  'eval_llm_coding/alg/em.py'),
                                        'eval_llm_coding.alg.em.EMGMM._log_likelihood': ( 'em_openai.html#emgmm._log_likelihood',
                                                                                          'eval_llm_coding/alg/em.py'),
                                        'eval_llm_coding.alg.em.EMGMM._m_step': ( 'em_openai.html#emgmm._m_step',
                                                                                  'eval_llm_coding/alg/em.py'),
                                        'eval_llm_coding.alg.em.EMGMM.fit': ('em_openai.html#emgmm.fit', 'eval_llm_coding/alg/em.py'),
                                        'eval_llm_coding.alg.em.EMGMM.predict': ( 'em_openai.html#emgmm.predict',
                                                                                  'eval_llm_coding/alg/em.py')},
            'eval_llm_coding.alg.em_torch': { 'eval_llm_coding.alg.em_torch.GMM': ( 'em_torch_openai.html#gmm',
                                                                                    'eval_llm_coding/alg/em_torch.py'),
                                              'eval_llm_coding.alg.em_torch.GMM.__init__': ( 'em_torch_openai.html#gmm.__init__',
                                                                                             'eval_llm_coding/alg/em_torch.py'),
                                              'eval_llm_coding.alg.em_torch.GMM._e_step': ( 'em_torch_openai.html#gmm._e_step',
                                                                                            'eval_llm_coding/alg/em_torch.py'),
                                              'eval_llm_coding.alg.em_torch.GMM._m_step': ( 'em_torch_openai.html#gmm._m_step',
                                                                                            'eval_llm_coding/alg/em_torch.py'),
                                              'eval_llm_coding.alg.em_torch.GMM.covariances': ( 'em_torch_openai.html#gmm.covariances',
                                                                                                'eval_llm_coding/alg/em_torch.py'),
                                              'eval_llm_coding.alg.em_torch.GMM.forward': ( 'em_torch_openai.html#gmm.forward',
                                                                                            'eval_llm_coding/alg/em_torch.py'),
                                              'eval_llm_coding.alg.em_torch.GMM.predict': ( 'em_torch_openai.html#gmm.predict',
                                                                                            'eval_llm_coding/alg/em_torch.py'),
                                              'eval_llm_coding.alg.em_torch.GMM.weights': ( 'em_torch_openai.html#gmm.weights',
                                                                                            'eval_llm_coding/alg/em_torch.py')},
            'eval_llm_coding.alg.mix_guassian': { 'eval_llm_coding.alg.mix_guassian.MixtureOfGaussians': ( 'mix_guassian_copilot.html#mixtureofgaussians',
                                                                                                           'eval_llm_coding/alg/mix_guassian.py'),
                                                  'eval_llm_coding.alg.mix_guassian.MixtureOfGaussians.__init__': ( 'mix_guassian_copilot.html#mixtureofgaussians.__init__',
                                                                                                                    'eval_llm_coding/alg/mix_guassian.py'),
                                                  'eval_llm_coding.alg.mix_guassian.MixtureOfGaussians._e_step': ( 'mix_guassian_copilot.html#mixtureofgaussians._e_step',
                                                                                                                   'eval_llm_coding/alg/mix_guassian.py'),
                                                  'eval_llm_coding.alg.mix_guassian.MixtureOfGaussians.covariances': ( 'mix_guassian_copilot.html#mixtureofgaussians.covariances',
                                                                                                                       'eval_llm_coding/alg/mix_guassian.py'),
                                                  'eval_llm_coding.alg.mix_guassian.MixtureOfGaussians.forward': ( 'mix_guassian_copilot.html#mixtureofgaussians.forward',
                                                                                                                   'eval_llm_coding/alg/mix_guassian.py'),
                                                  'eval_llm_coding.alg.mix_guassian.MixtureOfGaussians.predict': ( 'mix_guassian_copilot.html#mixtureofgaussians.predict',
                                                                                                                   'eval_llm_coding/alg/mix_guassian.py'),
                                                  'eval_llm_coding.alg.mix_guassian.MixtureOfGaussians.sample': ( 'mix_guassian_copilot.html#mixtureofgaussians.sample',
                                                                                                                  'eval_llm_coding/alg/mix_guassian.py'),
                                                  'eval_llm_coding.alg.mix_guassian.MixtureOfGaussians.weights': ( 'mix_guassian_copilot.html#mixtureofgaussians.weights',
                                                                                                                   'eval_llm_coding/alg/mix_guassian.py')},
            'eval_llm_coding.alg.vae': {},
            'eval_llm_coding.data': { 'eval_llm_coding.data.generate_mixed_gaussian_data': ( 'data.html#generate_mixed_gaussian_data',
                                                                                             'eval_llm_coding/data.py')},
            'eval_llm_coding.plot': { 'eval_llm_coding.plot.plot_2d_mix_guassian': ( 'plot.html#plot_2d_mix_guassian',
                                                                                     'eval_llm_coding/plot.py'),
                                      'eval_llm_coding.plot.plot_gaussian_ellipse': ( 'plot.html#plot_gaussian_ellipse',
                                                                                      'eval_llm_coding/plot.py')}}}
